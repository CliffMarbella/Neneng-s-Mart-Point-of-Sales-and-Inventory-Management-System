<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbx_pass.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>